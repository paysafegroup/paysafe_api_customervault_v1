FORMAT: 1A
HOST: https://api.netbanx.com/customervault/v1/

# NETBANX Customer Vault API

# Overview

Securely store customer payment information for a quick and simple checkout experience &ndash; PCI compliance is a breeze.
  * Allow us to securely store your customers’ sensitive payment information like card and bank account numbers in our Customer Vault &ndash; you never have to see or handle it.
  * Apply our REST-based API to create and modify customer profiles, and use tokens to process transactions.
  * Maintain multiple payment methods for each of your customers.
  * Build customer loyalty, and offer a streamlined and speedy checkout experience.
  
![](https://github.com/paysafegroup/paysafe_api_customervault_v1/raw/master/images/Tokenization_with_Customer_Vault_Paysafe_v2.png)  


<a name="apikey" /a>
# Authentication 
In order for you to use the NETBANX REST API, NETBANX must first set you up on their system
and provide you with an API key. Your API key looks something like this:
 * Key ID – MerchantXYZ
 * Key Password – B-tst1-0-51ed39e4-312d02345d3f123120881dff9bb4020a89e8ac44cdfdcecd702151182fdc952272661d290ab2e5849e31bb03deede7e

The case-sensitive API key is sent using HTTP Basic Authentication. To use HTTP Basic Authentication, you must send the API key credentials using the Authorization header with every request. The Authorization header is constructed as follows:
 1. The Key ID and Key Password are combined into a string separated by a colon, e.g.,“Key ID:Key Password”.
 2. The resulting string literal is then encoded using Base64.
 3. The authorization method and a space (i.e., “Basic”) are then put before the encoded string.

For example, using the Key ID and Password examples above, the header is formed as follows:

``Authorization: Basic
TWVyY2hhbnRYWVo6Qi10c3QxLTAtNTFlZDM5ZTQtMzEyZDAyMzQ1ZDNmMTIzMTIwODgxZGZmOWJiNDAyMGE4OWU4YWM0NGNkZmRjZWNkNzAyMTUxMTgyZmRjOTU yMjcyNjYxZDI5MGFiMmU1ODQ5ZTMxYmIwM2RlZWRlN2U=``

For additional details, please refer to [http://en.wikipedia.org/wiki/Basic_access_authentication](http://en.wikipedia.org/wiki/Basic_access_authentication).

**Note:** Your Production API key will be different from your Test API key. Contact your account manager for details. You must keep your API keys safe and ensure that it is used appropriately for your needs.

# URLs 

##  Test URL
In order to test your integration with NETBANX, use the following Test URL:

`https://api.test.netbanx.com`

For example:

`https://api.test.netbanx.com/customervault/v1/profiles/{PROFILE_ID}`

## Production URL
In order to process live requests with NETBANX, use the following Production URL:

`https://api.netbanx.com`

For example:

`https://api.netbanx.com/customervault/v1/profiles/{PROFILE_ID}`

# Pagination

In the case where an API GET request returns multiple results, NETBANX returns the first 10 records by default and uses HATEOAS links to provide page navigation. In addition to the default behavior, it is also possible to control the number of results and starting point by passing in query parameters as follows:

## Query Parameters for Pagination


| Name      | Description                                                                           |
|-----------|---------------------------------------------------------------------------------------|
| limit     | This is the total number of records to  return. Default value is 10. Max value is 50. |
| offset    | This is the starting position, where 0 is the first record. Default value is 0.       |
| startDate | This is the start date in UTC. Default value is 30 days before the endDate.           |
| endDate   | This is the end date in UTC. Default value is the current date and time.              |

# Global Invalid Characters

You must not include any of the characters in the following table as values in any of your request parameters. If you do, your request will result in an error.

|    Character    |    HEX    |    Description                     |
|-----------------|-----------|------------------------------------|
| "               | 22        | Double quotes (or speech marks)    |
| ;               | 3B        | Semicolon                          |
| ^               | 5E        | Caret, circumflex                  |
| *               | 2A        | Asterisk                           |
| <               | 3C        | Less than (or open angled bracket) |
| /               | 2F        | Slash or divide                    |
| [               | 5B        | Opening bracket                    |
| ]               | 5D        | Closing bracket                    |
| \               | 5C        | Backslash                          |

# API

The Customer Vault API allows merchants to securely store a customer's personal information, including address, payment, and contact information. 

The following request types are supported:

  * [Profiles](#profilesrequest)
  * [Addresses](#addressesrequest)
  * [Cards](#cardsrequest)
  * [ACH Bank Accounts](#achbankaccountsrequest)
  * [BACS Bank Accounts](#bacsbankaccountsrequest)
  * [EFT Bank Accounts](#eftbankaccountsrequest)
  * [SEPA Bank Accounts](#sepabankaccountsrequest)
  * [Mandates](#mandatesrequest)
  * [Apple Pay Single-Use Tokens](#applepaysingleusetokensrequest)
  * [Mobile Device Single-Use Tokens](#singleusetokensrequest)
  
**API Endpoint:** `https://api.netbanx.com/customervault/v1`

**Resource Patterns**

|Endpoint URL                                       |Description                            |Action |
|---                                                |---                                    |---    |
|/profiles                                          |Create a Customer Profile              |POST   |
|/profiles/{PROFILE_ID}                             |Look Up a Customer Profile             |GET    |
|/profiles/{PROFILE_ID}                             |Update a Customer Profile              |PUT    |
|/profiles/{PROFILE_ID}                             |Delete a Customer Profile              |DELETE |
|/profiles/{PROFILE_ID}/addresses                   |Create an Address                      |POST   |
|/profiles/{PROFILE_ID}/addresses/{ADDRESS_ID}      |Look Up an Address                     |GET    |
|/profiles/{PROFILE_ID}/addresses/{ADDRESS_ID}      |Update an Address                      |PUT    |
|/profiles/{PROFILE_ID}/addresses/{ADDRESS_ID}      |Delete an Address                      |DELETE |
|/profiles/{PROFILE_ID}/cards                       |Create a Card                          |POST   |
|/profiles/{PROFILE_ID}/cards/{CARD_ID}             |Look Up a Card                         |GET    |
|/profiles/{PROFILE_ID}/cards/{CARD_ID}             |Update a Card                          |PUT    |
|/profiles/{PROFILE_ID}/cards/{CARD_ID}             |Delete a Card                          |DELETE |
|/profiles/{PROFILE_ID}/achbankaccounts             |Create an ACH Bank Account             |POST   |
|/profiles/{PROFILE_ID}/achbankaccounts/{BANK_ACCOUNT_ID}   |Look Up an ACH Bank Account    |GET    |
|/profiles/{PROFILE_ID}/achbankaccounts/{BANK_ACCOUNT_ID}   |Update an ACH Bank Account     |PUT    |
|/profiles/{PROFILE_ID}/achbankaccounts/{BANK_ACCOUNT_ID}   |Delete an ACH Bank Account     |DELETE |
|/profiles/{PROFILE_ID}/bacsbankaccounts            |Create a BACS Bank Account             |POST   |
|/profiles/{PROFILE_ID}/bacsbankaccounts/{BANK_ACCOUNT_ID}  |Look Up a BACS Bank Account    |GET    |
|/profiles/{PROFILE_ID}/bacsbankaccounts/{BANK_ACCOUNT_ID}  |Update a BACS Bank Account     |PUT    |
|/profiles/{PROFILE_ID}/bacsbankaccounts/{BANK_ACCOUNT_ID}  |Delete a BACS Bank Account     |DELETE |
|/profiles/{PROFILE_ID}/eftbankaccounts             |Create an EFT Bank Account             |POST   |
|/profiles/{PROFILE_ID}/eftbankaccounts/{BANK_ACCOUNT_ID}   |Look Up an EFT Bank Account    |GET    |
|/profiles/{PROFILE_ID}/eftbankaccounts/{BANK_ACCOUNT_ID}   |Update an EFT Bank Account     |PUT    |
|/profiles/{PROFILE_ID}/eftbankaccounts/{BANK_ACCOUNT_ID}   |Delete an EFT Bank Account     |DELETE |
|/profiles/{PROFILE_ID}/sepabankaccounts            |Create a SEPA Bank Account             |POST   |
|/profiles/{PROFILE_ID}/sepabankaccounts/{BANK_ACCOUNT_ID}  |Look Up a SEPA Bank Account    |GET    |
|/profiles/{PROFILE_ID}/sepabankaccounts/{BANK_ACCOUNT_ID}  |Update a SEPA Bank Account      |PUT   |
|/profiles/{PROFILE_ID}/sepabankaccounts/{BANK_ACCOUNT_ID}  |Delete a SEPA Bank Account     |DELETE |
|/applepaysingleusetokens                           |Create an Apple Pay Single-Use Token   |POST   |
|singleusetokens                                    |Create a Mobile Device Single-Use Token    |POST   |
|/profiles/{PROFILE_ID}/bacsbankaccounts/{BANK_ACCOUNT_ID}/mandates |Create a BACS Mandate  |POST   |
|/profiles/{PROFILE_ID}/sepabankaccounts/{BANK_ACCOUNT_ID}/mandates |Create a SEPA Mandate  |POST   |
|/profiles/{PROFILE_ID}/mandates/{MANDATE_ID}       |Look Up a Mandate                      |GET    |
|/profiles/{PROFILE_ID}/mandates/{MANDATE_ID}       |Update a Mandate                       |PUT    |
|/profiles/{PROFILE_ID}/mandates/{MANDATE_ID}       |Delete a Mandate                       |DELETE |

# Getting Started

You can use the Customer Vault REST API to create profiles, addresses, cards, bank accounts, single-use tokens, and mandates.This section outlines some common scenarios for using the Customer Vault. To get started you must first sign up for a test account and get an API key.

All examples in this section use cURL, which is a command line tool for transferring data using protocols such as HTTPS.

## Verify That the Service Is Accessible

The following request verifies that the service is up and accessible from your network.

Request:

`cURL -X GET https://api.test.netbanx.com/customervault/monitor`

Response: 

`{
"status" : "READY"
}`

## Create a Profile for a Customer

A profile contains basic information about your customer, such as name and contact information.

To create a profile you must initiate a POST request to the profiles endpoint.

            cURL -X POST https://api.test.netbanx.com/customervault/v1/profiles \
            -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
            -H 'Content-Type: application/json' \
            -d ' {
              "merchantCustomerId":"mycustomer1",
              "locale" : "en_US",
              "firstName" : "John",
              "lastName" : "Smith",
              "phone" : "713-444-5555",
              "email" : "john.smith@somedomain.com",
              "phone" : "713-444-5555"
             }'
             
**Note:** Prior to trying the example, you should:

  * Provide a unique merchant customer ID for each transaction.
  * Replace the [API key](#apikey) (after the -u) with the API key you have received.
  
  **Response**
  
              {
              "id" : "716adb4f-6b85-4089-ba9c-d9c0eb649cd7",
              "status" : "ACTIVE",
              "merchantCustomerId" : "mycustomer1",
              "locale" : "en_US",
              "firstName" : "John",
              "lastName" : "Smith",
              "phone" : "713-444-5555",
              "email" : "john.smith@somedomain.com",
              "paymentToken" : "PyhYo1nGKUfWOPj"
            }
            
## Add an Address to the Profile

In the previous example you created a profile for a customer. As a result, the API returned a profile ID representing that profile.

The Customer Vault API allows you to add multiple addresses to your customer's profile. To add an address to the profile, you must use that profile ID and initiate a POST request to the addresses endpoint.

**Note:** Prior to trying the example, you should replace the [API key](#apikey) (after the -u) with the API key you have received.

            cURL -X POST https://api.test.netbanx.com/customervault/v1/profiles/716adb4f-6b85-4089-ba9c-d9c0eb649cd7/addresses \
            -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
            -H 'Content-Type: application/json' \
            -d ' {
              "nickName":"home",
              "street" : "100 Queen Street West",
              "city" : "Toronto",
              "state" : "ON",
              "country" : "CA",
              "zip" : "M5H 2N2"
             }'
             
**Response**

            {
              "id" : "81ffcddf-ad82-40d2-aaa0-c4f9c376ad65",
              "status" : "ACTIVE",
              "street" : "100 Queen Street West",
              "city" : "Toronto",
              "state" : "ON",
              "country" : "CA",
              "zip" : "M5H 2N2",
              "defaultShippingAddressIndicator" : false
            }
            
## Add a Card to the Profile

The Customer Vault API allows you to store multiple credit cards against your customer's profile. For billing purposes, each credit card can be associated to a different address, or all credit cards can be associated to the same billing address, depending on your business needs.

To add a credit card and associate it to the address you just created, you must use the profile ID (716adb4f-6b85-4089-ba9c-d9c0eb649cd7) and the address ID (81ffcddf-ad82-40d2-aaa0-c4f9c376ad65) and initiate a POST request to the cards endpoint.

**Note:** Prior to trying the example, you should replace the [API key](#apikey) (after the -u) with the API key you have received.

            cURL -X POST https://api.test.netbanx.com/customervault/v1/profiles/716adb4f-6b85-4089-ba9c-d9c0eb649cd7/cards \
            -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
            -H 'Content-Type: application/json' \
            -d ' {
              "nickName":"Personal Visa",
              "holderName" : "John Smith",
              "cardNum" : "4530910000012345",
              "cardExpiry" : {
                "month" : 12,
                "year" : 2019
              },
              "billingAddressId" : "81ffcddf-ad82-40d2-aaa0-c4f9c376ad65"
             }'
             
**Response**

            {
              "id" : "178ae2b8-85a5-4761-b1dd-4f14ac73571b",
              "status" : "ACTIVE",
              "holderName" : "John Smith",
              "cardBin" : "453091",
              "lastDigits" : "2345",
              "cardExpiry" : {
                "month" : 12,
                "year" : 2019
              },
              "cardType" : "VI",
              "paymentToken" : "CaBP0abDKgROjYU",
              "billingAddressId" : "81ffcddf-ad82-40d2-aaa0-c4f9c376ad65",
              "defaultCardIndicator" : false
            }
            
## Add a Bank Account to the Profile

The Customer Vault API allows you to store multiple bank accounts against your customer's profile. For billing purposes, each bank account can be associated to a different address, or all bank accounts can be associated to the same billing address, depending on your business needs.

To add a bank account and associate it to the address you created above, you must use the profile ID (716adb4f-6b85-4089-ba9c-d9c0eb649cd7) and the address ID (81ffcddf-ad82-40d2-aaa0-c4f9c376ad65) and initiate a POST request to one of the bank account endpoints.

When you use the Customer Vault API to create a bank account, the newly created bank account becomes part of the profile that owns the profile ID and address ID (billingAddressId) you have used. The example below shows how to create an ACH bank account to add to a customer profile.

**Note:** Prior to trying the example, you should replace the [API key](#apikey) (after the -u) with the API key you have received.

            cURL -X POST https://api.test.netbanx.com/customervault/v1/profiles/716adb4f-6b85-4089-ba9c-d9c0eb649cd7/achbankaccounts \
            -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
            -H 'Content-Type: application/json' \
            -d ' {
                 "nickName": "John's RBC Business Bank Account",
                 "accountNumber": "511201",
                 "routingNumber": "123456789",
                 "accountHolderName": "XYZ Business",
                 "billingAddressId": "60022f38-fd17-4731-909c-923930d0d5d4",
                 "accountType": "CHECKING"
             }'
             
**Response**

            {
              "id": "6a275b7c-6f11-4ed1-ae77-21071724574a",
                "status": "ACTIVE",
                "nickName": "John's RBC Business Bank Account",
                "routingNumber": "123456789",
                "accountHolderName": "XYZ Business",
                "billingAddressId": "60022f38-fd17-4731-909c-923930d0d5d4",
                "accountType": "CHECKING",
                "lastDigits": "01",
                "paymentToken": "CNjEzMTM4NDg1"
            }
            
## Create a Single-Use Token

The Customer Vault API allows you to create single-use tokens, which are then used with a mobile device to process a purchase through the Card Payments API.

**Note:** You have to generate a new single-use token for each Card Payments transaction you wish to process.

The example below shows you how to create an Apple Pay single-use token. In the response, you will find a paymentToken value that you would include with your Authorization or Purchase requests.

**Note:** Prior to trying the example, you should:

  * Replace the [API key](#apikey) (after the -u) with the API key you have received.
  * Replace the value for the *data* element with valid passkit encrypted payment data.
  * Replace the value for the *signature* element with valid payment signature and header data.
  * Replace the values for the *header* sub-elements with valid values from the iOS device.

            cURL -X POST https://api.test.netbanx.com/customervault/v1/applepaysingleusetokens \
            -u OT1625:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
            -H 'Content-Type: application/json' \
            -d ' {
                "applePayPaymentToken": {
                    "version": "EC_v1",
                    "data": "<passkit_encrypted_payment_data>",
                    "signature": "<signature_for_payment_and_header_data>",
                    "header": {
                        "transactionId": "b53e22ef6669ce7f50951cfd6821908f4e679f050f5a551a1b5f6202253136ae",
                        "ephemeralPublicKey": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEB39YqvWZG0NOYjbkL5D61Mxip6uw23Q7m8gWgxL41k4fs0BgJ+MFcIGYOH86kAGL/wjiftDahRkUnzOGls2hzw==",
                        "publicKeyHash": "O5gJ/P5sQ7ufMZQXA7ccLoOkJ13VNknbu+4K0TaCQXE="
                    }
                }
            }'
            
**Response**

            {
                "id": "a02e52c7-c991-4418-966a-b62989cb0eae",
                "paymentToken" : "ABC4AFQQBC5UR5H",
                "timeToLiveSeconds" : "899",
                "applePayPaymentToken": {
                    "version": "EC_v1",
                    "signature": "<signature_for_payment_and_header_data>",
                    "header": {
                        "transactionId": "b53e22ef6669ce7f50951cfd6821908f4e679f050f5a551a1b5f6202253136ae",
                        "publicKeyHash": "O5gJ/P5sQ7ufMZQXA7ccLoOkJ13VNknbu+4K0TaCQXE="
                    }
                },
                "card": {
                    "lastDigits": "1111",
                    "holderName": "Joe Smith"
                },
                "transaction": {
                    "amount": 1000,
                    "currencyCode": "USD"
                }
             }
             
## Process a Transaction Using a Payment Token

You can process payments using credit cards (Card Payments API) or bank accounts (Direct Debit API) that you have stored in the Customer Vault by referring to the *paymentToken* associated with the card or bank account. In these cases, the payment token replaces all the card or bank account information that otherwise might be included in the request (e.g., card number and expiry date).

 * When you added a card to the profile a previous example, you got back a *paymentToken* with the value of *CaBP0abDKgROjYU*. 

 * When you added a bank account to the profile in a previous example, you got back a *paymentToken* with the value of *CNjEzMTM4NDg1*.
 
You can process payments using a mobile device, e.g., with Apple Pay, by including the single-use *paymentToken* that is required for each mobile payment request.
 * When you created an Apple Pay single-use token in a previous example, you got back a paymentToken with the value of ABC4AFQQBC5UR5H.

To process a card transaction using a payment token, you must use it to initiate a POST request to the auths endpoint in the card payments API. 

**Note:** Prior to trying the example, you should replace the API key (after the -u) with the API key you have received.

The following example shows you how to process a credit card request using the *paymentToken* that represents that card.

            cURL -X POST https://api.test.netbanx.com/cardpayments/v1/accounts/89987201/auths \
              -u devcentre322:B-qa2-0-53625f86-302c021476f52bdc9deab7aea876bb28762e62f92fc6712d0214736abf501e9675e55940e83ef77f5c304edc7968 \
              -H 'Content-Type: application/json' \
              -d ' {
                "merchantRefNum" : "payment-token-demo-1",
                "amount" : 500,
                "settleWithAuth":true,
                "card" : {
                  "paymentToken" : "CaBP0abDKgROjYU"
                }
               } '
               
**Response**

            {
              "links":[
                {
                  "rel":"settlement",
                  "href":"https://api.test.netbanx.com/cardpayments/v1/accounts/89987201/settlements/81ed5db0-971b-475b-81fd-18023732acd3"
                },
                {
                  "rel":"self",
                  "href":"https://api.test.netbanx.com/cardpayments/v1/accounts/89987201/auths/81ed5db0-971b-475b-81fd-18023732acd3"
                }
              ],
              "id":"81ed5db0-971b-475b-81fd-18023732acd3",
              "merchantRefNum":"payment-token-demo-1",
              "txnTime":"2014-06-09T15:57:49Z",
              "status":"COMPLETED",
              "amount":500,
              "settleWithAuth":true,
              "availableToSettle":0,
              "card":{
                "type":"VI",
                "lastDigits":"2345",
                "cardExpiry":{
                  "month":12,
                  "year":2019
                }
              },
              "authCode":"100001",
              "profile":{
                "firstName":"John",
                "lastName":"Smith",
                "email":"john.smith@somedomain.com"
              },
              "billingDetails":{
                "street":"100 Queen Street West",
                "city":"Toronto",
                "state":"ON",
                "country":"CA",
                "zip":"M5H2N2",
                "phone":"713-444-5555"
              },
              "merchantDescriptor":{
                "dynamicDescriptor":"test",
                "phone":"test"
              },
              "currencyCode":"USD",
              "avsResponse":"MATCH",
              "settlements":[
                {
                  "links":[
                    {
                      "rel":"self",
                      "href":"https://api.test.netbanx.com/cardpayments/v1/accounts/89987201/settlements/81ed5db0-971b-475b-81fd-18023732acd3"
                    }
                  ],
                  "id":"81ed5db0-971b-475b-81fd-18023732acd3",
                  "merchantRefNum":"payment-token-demo-1",
                  "txnTime":"2014-06-09T15:57:49Z",
                  "status":"PENDING",
                  "amount":500,
                  "availableToRefund":500
                }
              ]
            }
            
# Testing Instructions

The NETBANX Test environment can be used to test websites or applications. It is important to make sure that your systems are working correctly before going into a live environment.


With the NETBANX Customer Vault API you can test the following:

* Verify support for all the operation types that you require.
* Review all common errors as well as errors that may occur for each operation, and ensure your application can handle them.
* Verify the lengths and format for all attributes you send.

To use the test environment, you must post your requests to the following endpoint:

`https://api.test.netbanx.com/customervault/v1/`

# ISO Standards

<a name="currencycodes"></a>
## Currency Codes

|Currency           |Code   |
|---                |---    |
|Argentine Peso     |ARS    |
|Australian Dollar  |AUD    |
|Baht               |THB    |
|Brazilian Real     |BRL    |
|Bulgarian Lev      |BGN    |
|Canadian Dollar    |CAD    |
|Czech Koruna       |CZK    |
|Danish Krone       |DKK    |
|Euro               |EUR    |
|Forint             |HUF    |
|Hong Kong Dollar   |HKD    |
|Iceland Krona      |ISK    |
|Japanese Yen       |JPY    |
|Mexican Peso       |MXN    |
|New Israeli Shekel |ILS    |
|New Leu            |RON    |
|New Taiwan Dollar  |TWD    |
|New Zealand Dollar |NZD    |
|Norwegian Krone    |NOK    |
|Pound Sterling     |GBP    |
|Rand               |ZAR    |
|Singapore Dollar   |SGD    |
|Swedish Krona      |SEK    |
|Swiss Franc        |CHF    |
|US Dollar          |USD    |
|Zloty              |PLN    |

<a name="provincecodes"></a>
## Province Codes

|Province               |Code   |
|---                    |---    |
|Alberta                |AB     |
|British Columbia       |BC     |
|Manitoba               |MB     |
|New Brunswick          |NB     |
|Newfoundland           |NL     |
|Nova Scotia            |NS     |
|Northwest Territories  |NT     |
|Nunavut                |NU     |
|Ontario                |ON     |
|Prince Edward Island   |PE     |
|Quebec                 |QC     |
|Saskatchewan           |SK     |
|Yukon                  |YT     |

<a name="statecodes"></a>
## State Codes

|State                  |Code   |
|---                    |---    |
|Alabama                |AL     |
|Alaska                 |AK     |
|American Samoa         |AS     |
|Arizona                |AZ     |
|Arkansas               |AR     |
|Armed Forces Americas  |AA     |
|Armed Forces Europe    |AE     |
|Armed Forces Pacific   |AP     |
|California             |CA     |
|Colorado               |CO     |
|Connecticut            |CT     |
|Delaware               |DE     |
|District of Columbia   |DC     |
|Florida                |FL     |
|Georgia                |GA     |
|Guam                   |GU     |
|Hawaii                 |HI     |
|Idaho                  |ID     |
|Illinois               |IL     |
|Indiana                |IN     |
|International          |IT     |
|Iowa                   |IA     |
|Kansas                 |KS     |
|Kentucky               |KY     |
|Louisiana              |LA     |
|Maine                  |ME     |
|Maryland               |MD     |
|Massachusetts          |MA     |
|Michigan               |MI     |
|Minnesota              |MN     |
|Mississippi            |MS     |
|Missouri               |MO     |
|Montana                |MT     |
|Nebraska               |NE     |
|Nevada                 |NV     |
|New Hampshire          |NH     |
|New Jersey             |NJ     |
|New Mexico             |NM     |
|New York               |NY     |
|North Carolina         |NC     |
|North Dakota           |ND     |
|Northern Mariana Is.   |MP     |
|Ohio                   |OH     |
|Oklahoma               |OK     |
|Oregon                 |OR     |
|Palau                  |PW     |
|Pennsylvania           |PA     |
|Puerto Rico            |PR     |
|Rhode Island           |RI     |
|South Carolina         |SC     |
|South Dakota           |SD     |
|Tennessee              |TN     |
|Texas                  |TX     |
|U.S. Virgin Islands    |VI     |
|United States Federal  |US     |
|Utah                   |UT     |
|Vermont                |VT     |
|Virginia               |VA     |
|Washington             |WA     |
|West Virginia          |WV     |
|Wisconsin              |WI     |
|Wyoming                |WY     |


<a name="countrycodes"></a>
## Country Codes
| Country                       | Code |
|---                                |---       |
| Afghanistan                       | AF |
| Åland Islands                     | AX |
| Albania                           | AL |
| Algeria                           | DZ |
| American Samoa                    | AS |
| Andorra                           | AD |
| Angola                            | AO |
| Anguilla                          | AI |
| Antarctica                        | AQ |
| Antigua and Barbuda               | AG |
| Argentina                         | AR |
| Armenia                           | AM |
| Aruba                             | AW |
| Australia                         | AU |
| Austria                           | AT |
| Azerbaijan                        | AZ |
| Bahamas                           | BS |
| Bahrain                           | BH |
| Bangladesh                        | BD |
| Barbados                          | BB |
| Belarus                           | BY |
| Belgium                           | BE |
| Belize                            | BZ |
| Benin                             | BJ |
| Bermuda                           | BM |
| Bhutan                            | BT |
| Bolivia                           | BO |
| Bonaire, Sint Eustatius and Saba  | BQ |
| Bosnia and Herzegovina            | BA |
| Botswana                          | BW |
| Bouvet Island                     | BV |
| Brazil                            | BR |
| British Indian Ocean Territory    | IO |
| Brunei Darussalam                 | BN |
| Bulgaria                          | BG |
| Burkina Faso                      | BF |
| Burundi                           | BI |
| Cambodia                          | KH |
| Cameroon                          | CM |
| Canada                            | CA |
| Cape Verde                        | CV |
| Cayman Islands                    | KY |
| Central African Republic          | CF |
| Chad                              | TD |
| Chile                             | CL |
| China                             | CN |
| Christmas Island                  | CX |
| Cocos (Keeling) Islands           | CC |
| Colombia                          | CO |
| Comoros                           | KM |
| Congo                             | CG |
| Congo, Democratic Republic of     | CD |
| Cook Islands                      | CK |
| Costa Rica                        | CR |
| Côte D’Ivoire                     | CI |
| Croatia                           | HR |
| Cuba                              | CU |
| Curaçao                           | CW |
| Cyprus                            | CY |
| Czech Republic                    | CZ |
| Denmark                           | DK |
| Djibouti                          | DJ |
| Dominica                          | DM |
| Dominican Republic                | DO |
| Ecuador                           | EC |
| Egypt                             | EG |
| El Salvador                       | SV |
| Equatorial Guinea                 | GQ |
| Eritrea                           | ER |
| Estonia                           | EE |
| Ethiopia                          | ET |
| Falkland Islands                  | FK |
| Faroe Islands                     | FO |
| Fiji                              | FJ |
| Finland                           | FI |
| France                            | FR |
| French Guiana                     | GF |
| French Polynesia                  | PF |
| French Southern Territories       | TF |
| Gabon                             | GA |
| Gambia                            | GM |
| Georgia                           | GE |
| Germany                           | DE |
| Ghana                             | GH |
| Gibraltar                         | GI |
| Greece                            | GR |
| Greenland                         | GL |
| Grenada                           | GD |
| Guadeloupe                        | GP |
| Guam                              | GU |
| Guatemala                         | GT |
| Guernsey                          | GG |
| Guinea                            | GN |
| Guinea-Bissau                     | GW |
| Guyana                            | GY |
| Haiti                             | HT |
| Heard and McDonald Islands        | HM |
| Honduras                          | HN |
| Hong Kong                         | HK |
| Hungary                           | HU |
| Iceland                           | IS |
| India                             | IN |
| Indonesia                         | ID |
| Iran  (Islamic Republic of)       | IR |
| Iraq                              | IQ |
| Ireland                           | IE |
| Isle of Man                       | IM |
| Israel                            | IL |
| Italy                             | IT |
| Jamaica                           | JM |
| Japan                             | JP |
| Jersey                            | JE |
| Jordan                            | JO |
| Kazakhstan                        | KZ |
| Kenya                             | KE |
| Kiribati                          | KI |
| Korea, Democratic People’s Republic | KP |
| Korea, Republic of                | KR |
| Kuwait                            | KW |
| Kyrgyzstan                        | KG |
| Lao People’s Democratic Republic  | LA |
| Latvia                            | LV |
| Lebanon                           | LB |
| Lesotho                           | LS |
| Liberia                           | LR |
| Libyan Arab Jamahiriya            | LY |
| Liechtenstein                     | LI |
| Lithuania                         | LT |
| Luxembourg                        | LU |
| Macau                             | MO |
| Macedonia                         | MK |
| Madagascar                        | MG |
| Malawi                            | MW |
| Malaysia                          | MY |
| Maldives                          | MV |
| Mali                              | ML |
| Malta                             | MT |
| Marshall Islands                  | MH |
| Martinique                        | MQ |
| Mauritania                        | MR |
| Mauritius                         | MU |
| Mayotte                           | YT |
| Mexico                            | MX |
| Micronesia, Federated States of   | FM |
| Moldova, Republic of              | MD |
| Monaco                            | MC |
| Mongolia                          | MN |
| Montenegro                        | ME |
| Montserrat                        | MS |
| Morocco                           | MA |
| Mozambique                        | MZ |
| Myanmar                           | MM |
| Namibia                           | NA |
| Nauru                             | NR |
| Nepal                             | NP |
| New Caledonia                     | NC |
| New Zealand                       | NZ |
| Nicaragua                         | NI |
| Niger                             | NE |
| Nigeria                           | NG |
| Niue                              | NU |
| Norfolk Island                    | NF |
| Northern Mariana Islands          | MP |
| Norway                            | NO |
| Oman                              | OM |
| Pakistan                          | PK |
| Palau                             | PW |
| Palestinian Territory, Occupied   | PS |
| Panama                            | PA |
| Papua New Guinea                  | PG |
| Paraguay                          | PY |
| Peru                              | PE |
| Philippines                       | PH |
| Pitcairn                          | PN |
| Poland                            | PL |
| Portugal                          | PT |
| Puerto Rico                       | PR |
| Qatar                             | QA |
| Reunion                           | RE |
| Romania                           | RO |
| Russian Federation                | RU |
| Rwanda                            | RW |
| Saint Barthélemy                  | BL |
| Saint Helena                      | SH |
| Saint Kitts and Nevis             | KN |
| Saint Lucia                       | LC |
| Saint Martin                      | MF |
| Saint Vincent and the Grenadines  | VC |
| Samoa                             | WS |
| San Marino                        | SM |
| Sao Tome and Principe             | ST |
| Saudi Arabia                      | SA |
| Senegal                           | SN |
| Serbia                            | RS |
| Seychelles                        | SC |
| Sierra Leone                      | SL |
| Singapore                         | SG |
| Sint Maarten                      | SX |
| Slovakia (Slovak Republic)        | SK |
| Slovenia                          | SI |
| Solomon Islands                   | SB |
| Somalia                           | SO |
| South Africa                      | ZA |
| South Georgia and the South Sandwich Islands | GS |
| South Sudan                       | SS |
| Spain                             | ES |
| Sri Lanka                         | LK |
| St. Pierre and Miquelon           | PM |
| Sudan                             | SD |
| Suriname                          | SR |
| Svalbard and Jan Mayen Islands    | SJ |
| Swaziland                         | SZ |
| Sweden                            | SE |
| Switzerland                       | CH |
| Syrian Arab Republic              | SY |
| Taiwan                            | TW |
| Tajikistan                        | TJ |
| Tanzania, United Republic of      | TZ |
| Thailand                          | TH |
| The Netherlands                   | NL |
| Timor-Leste                       | TL |
| Togo                              | TG |
| Tokelau                           | TK |
| Tonga                             | TO |
| Trinidad and Tobago               | TT |
| Tunisia                           | TN |
| Turkey                            | TR |
| Turkmenistan                      | TM |
| Turks and Caicos Islands          | TC |
| Tuvalu                            | TV |
| Uganda                            | UG |
| Ukraine                           | UA |
| United Arab Emirates              | AE |
| United Kingdom                    | GB |
| United States                     | US |
| United States Minor Outlying Islands | UM |
| Uruguay                           | UY |
| Uzbekistan                        | UZ |
| Vanuatu                           | VU |
| Vatican City State (Holy See)     | VA |
| Venezuela                         | VE |
| Vietnam                           | VN |
| Virgin Islands (British)          | VG |
| Virgin Islands (U.S.)             | VI |
| Wallis and Futuna Islands         | WF |
| Western Sahara                    | EH |
| Yemen                             | YE |
| Zambia                            | ZM |
| Zimbabwe                          | ZW |

# Complex JSON Objects

<a name="achbankaccountobject"></a>
## achBankAccount
|Element            |Type                       |Description                        |
|---                |---                        |---       |
|id                 |string<br/>`length<=36`    |This is the ID for the request, returned by NETBANX. It can be used later, e.g., to look up or update the bank account.|
|nickName           |string<br/>`length<=50`    |This is an alias defined by the customer for the bank account (e.g., "First Bank account").|
|merchantRefNum     |string<br/>`length<=255`   |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|status             |string                     |This is the status of the  request. Possible values are:<ul><li>ACTIVE &ndash; The bank account has been created.</li><li>INVALID &ndash; The bank account is invalid.</li><li>INACTIVE &ndash; The bank account has been deleted.</li></ul><br/>**Note:** By default, the bank account is created with the status of ACTIVE.|
|statusReason       |string<br/>`length<=255`   |If the status is INVALID, this is a description of why the account is invalid (e.g., account closed).|
|accountNumber      |string<br/>`length=4-17`   |This is the bank account number.|
|accountHolderName  |string<br/>`length<=30`    |This is the name of the customer or company that owns the bank account.|
|routingNumber      |string<br/>`length=9`      |For USD accounts, this is the 9-digit routing number of the customer’s bank.|
|accountType        |enumeration                |This is the bank account type. Possible values are:<ul><li>CHECKING</li><li>LOAN</li><li>SAVINGS</li></ul>|
|lastDigits         |string<br/>`length=2`      |This is the last two digits of the bank account number.|
|billingAddressId   |string<br/>`length<=36`    |This is the address ID returned in response to the request to Create an Address, which will be associated with this bank account.|
|paymentToken       |string<br/>`length<=50`    |This is a token generated by NETBANX that represents the bank account and is returned in the response to the bank account creation request. It can be used in the place of bank account information in Direct Debit transactions.|

```apib
            {
                "nickName": "John's RBC Business Bank Account",
                "accountNumber": "511201",
                "routingNumber": "123456789",
                "accountHolderName": "XYZ Business",
                "billingAddressId": "60022f38-fd17-4731-909c-923930d0d5d4",
                "accountType": "CHECKING"
            }
```


<a name="addressesobject"></a>
## addresses
|Element            |Type                       |Description                        |
|---                |---                        |---       |
|id                 |string<br/>`length<=36`    |This is the ID for the request.|
|nickName           |string<br/>`length<=50`    |This is an alias defined by the customer for this address (e.g., "home address").|
|street             |string<br/>`length<=50`    |This is the first line of the customer's street address.|
|street2            |string<br/>`length<=50`    |This is the second line of the customer's street address, if required (e.g., apartment number).|
|city               |string<br/>`length<=40`    |This is the city where the address is located.|
|country            |string<br/>`length=2`      |This is the country where the address is located. See Country Codes.|
|state              |string<br/>`length<=40`    |This is the state/province/region in which the customer lives.<br/>For Canada see [Province Codes](#provincecodes). For the United States see [State Codes](#statecodes). Other countries have no restrictions. |
|zip                |string<br/>`length<=10`    |This is the zip, postal, or post code of the customer's address.|
|recipientName      |string<br/>`length<=255`   |This is the name of the recipient at this address, if it is different from the name in the profile.|
|phone              |string<br/>`length<=40`    |This is the phone number to contact the recipient at this address, if it is different from the phone number in the profile.|
|status             |enumeration                |This is the status of the address. Possible values are:<ul><li>ACTIVE</li></ul>|

```apib
            {
              "nickName":"home",
              "street":"100 Queen Street West",
              "street2":"Unit 201",
              "city":"Toronto",
              "country":"CA",
              "state":"ON",
              "zip":"M5H 2N2",
              "recipientName":"Jane Doe",
              "phone":"647-788-3901"
            }
```

<a name="applepaypaymenttokenobject"></a>
## applePayPaymentToken
|Element            |Type                       |Required       |Description                        |
|---                |---                        |---            |---       |
|data               |string<br/>`length<=4000`  |Yes            |ThisThis is the encrypted payment data.|
|header             |[header](#headerobject)    |Yes            |This is additional version-dependent information used to decrypt and verify the payment.|
|signature          |string<br/>`length<=4000`  |Yes            |This is the signature of the payment and header data.|
|version            |string<br/>`length<=36`    |Yes            |This is version information about the payments token. Value is "EC_v1".|

```apib
            {
                "applePayPaymentToken": {
                    "version": "EC_v1",
                    "data": "<passkit_encrypted_payment_data>",
                    "signature": "<signature_for_payment_and_header_data>",
                    "header": {
                        "transactionId": "b53e22ef6669ce7f50951cfd6821908f4e679f050f5a551a1b5f6202253136ae",
                        "ephemeralPublicKey": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEB39YqvWZG0NOYjbkL5D61Mxip6uw23Q7m8gWgxL41k4fs0BgJ+MFcIGYOH86kAGL/wjiftDahRkUnzOGls2hzw==",
                        "publicKeyHash": "O5gJ/P5sQ7ufMZQXA7ccLoOkJ13VNknbu+4K0TaCQXE="
                    }
                }
            }
```

<a name="applepaysingleusetokenobject"></a>
## applepaysingleusetoken
|Element                |Type                       |Description                        |
|---                    |---                        |---       |
|applePayPaymentToken   |[applePayPaymentToken](#applepaypaymenttokenobject)    |This is the paymentData object generated from the iOS device for Apple Pay.|
|card                   |[card](#cardsobject)       |This is the Apple Pay virtual card that NETBANX will use for the purchase request.|
|transaction            |[transaction](#transactionobject)  |These are the Apple Pay transaction details.|
|id                     |string<br/>`length<=36`    |This is the ID for the request.|
|paymentToken           |string<br/>`length<=50`    |This is the single-use payment token generated by NETBANX and returned in the response to the single-use token creation request.|
|timeToLiveSeconds      |number                     |This is the period of time the single-use token is valid before expiration, in seconds.|

```apib
            {
                "applePayPaymentToken": {
                    "version": "EC_v1",
                    "data": "<passkit_encrypted_payment_data>",
                    "signature": "<signature_for_payment_and_header_data>",
                    "header": {
                        "transactionId": "b53e22ef6669ce7f50951cfd6821908f4e679f050f5a551a1b5f6202253136ae",
                        "ephemeralPublicKey": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEB39YqvWZG0NOYjbkL5D61Mxip6uw23Q7m8gWgxL41k4fs0BgJ+MFcIGYOH86kAGL/wjiftDahRkUnzOGls2hzw==",
                        "publicKeyHash": "O5gJ/P5sQ7ufMZQXA7ccLoOkJ13VNknbu+4K0TaCQXE="
                    }
                }
            }
```



<a name="bacsbankaccountobject"></a>
## bacsBankAccount
|Element            |Type                       |Description                        |
|---                |---                        |---       |
|id                 |string<br/>`length<=36`    |This is the ID for the request, returned by NETBANX. It can be used later, e.g., to look up or update the bank account.|
|nickName           |string<br/>`length<=50`    |This is an alias defined by the customer for the bank account (e.g., "Sally's Barclays Account").|
|merchantRefNum     |string<br/>`length<=255`   |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|status             |string                     |This is the status of the  request. Possible values are:<ul><li>ACTIVE &ndash; The bank account has been created.</li><li>INVALID &ndash; The bank account is invalid.</li><li>INACTIVE &ndash; The bank account has been deleted.</li></ul><br/>**Note:** By default, the bank account is created with the status of ACTIVE.|
|statusReason       |string<br/>`length<=255`   |If the status is INVALID, this is a description of why the account is invalid (e.g., account closed).|
|accountNumber      |string<br/>`length=4-17`   |This is the bank account number.|
|accountHolderName  |string<br/>`length<=30`    |This is the name of the customer or company that owns the bank account.|
|sortCode           |string<br/>`length=6`      |This is the 6-digit sort code that identifies the financial institution and branch of the customer’s bank.|
|lastDigits         |string<br/>`length=2`      |This is the last two digits of the bank account number.|
|billingAddressId   |string<br/>`length<=36`    |This is the address ID returned in response to the request to Create an Address, which will be associated with this bank account.|
|paymentToken       |string<br/>`length<=50`    |This is a token generated by NETBANX that represents the bank account and is returned in the response to the bank account creation request. It can be used in the place of bank account information in Direct Debit transactions.|
|mandates           |list                       |This is one or more mandates associated with the bank account.

```apib
            {
                "nickName": "Sally's Barclays Account",
                "accountHolderName": "Sally Barnes",
                "accountNumber": "51120172",
                "sortCode": "123456",
                "billingAddressId": "60022f38-fd17-4731-909c-923930d0d5d4",
                "mandates": [ {
                  "reference": "ABCDEFGHIJ"
                } ]
            }
```

<a name="billingaddressobject"></a>
## billingAddress
|Element            |Type                       |Required       |Description                        |
|---                |---                        |---            |---       |
|nickName           |string<br/>`length<=50`    |               |This is an alias defined by the customer for this address (e.g., "home address").|
|street             |string<br/>`length<=50`    |               |This is the first line of the customer's street address.|
|street2            |string<br/>`length<=50`    |               |This is the second line of the customer's street address, if required (e.g., apartment number).|
|city               |string<br/>`length<=40`    |               |This is the city where the address is located.|
|state              |string<br/>`length<=40`    |               |This is the state/province/region in which the customer lives.<br/>For Canada see [Province Codes](#provincecodes). For the United States see [State Codes](#statecodes). Other countries have no restrictions.|
|zip                |string<br/>`length<=10`    |               |This is the zip, postal, or post code of the customer's address.|
|country            |string<br/>`length=2`      |               |This is the country where the address is located. See [Country Codes](#countrycodes).|

```apib
            {
              "nickName":"home",
              "street":"100 Queen Street West",
              "street2":"Unit 201",
              "city":"Toronto",
              "state":"ON",
              "zip":"M5H 2N2",
              "country":"CA"
            }
```

<a name="cardexpiryobject"></a>
## cardExpiry
|Element            |Type                       |Required       |Description    |
|---                |---                        |---            |---            |
|month              |number<br/>`length=2`      |Yes            |This is the month the card expires.|
|year               |number<br/>`length=4`      |Yes            |This is the year the card expires.|

```apib
            {
              "cardExpiry":{
                "month":"12",
                "year":"2019"
              }
            }
```

<a name="cardsobject"></a>
## cards
|Element            |Type                           |Description    |
|---                |---                            |---            |
|id                 |string<br/>`length<=36`        |This is the card ID returned by NETBANX that can be used later to look up or update a card on the profile.|
|nickName           |string<br/>`length<=50`        |This is an alias defined by the customer for this card (e.g., "corporate card").|
|merchantRefNum     |string<br/>`length<=255`       |This is the merchant’s own card identification, which can be included in the request if desired. This value is only stored by the NETBANX system and has no bearing on the request.|
|holderName         |string<br/>`length<=160`       |This is the name of the card holder.|
|cardNum            |string<br/>`length=8-20`       |This is the card number.|
|cardBin            |string<br/>`length<=6`         |This is the card BIN (typically the first 6 digits).|
|lastDigits         |string<br/>`length<=4`         |This is the last digits of the card number.|
|cardExpiry         |[cardexpiry](#cardexpiryobject)    |   |
|cardType           |enumeration                    |This is the type of card associated with the profile. Possible values are:<ul><li>AM = American Express</li><li>DC = Diners Club</li><li>DI = Discover</li><li>MC = MasterCard</li><li>VI =Visa</li></ul><br/>This value is determined by the system and returned in the response.|
|billingAddress     |[billingAddress](#billingaddressobject)    |   |
|billingAddressId   |string<br/>`length<=36`        |This is the ID returned in response to the creation of the address that will be associated with this card.|
|defaultCardIndicator   |boolean                    |This indicates whether this is the default card for this profile, and is returned in the response. Possible values are:<ul><li>true</li><li>false</li></ul>|
|paymentToken       |string<br/>`length<=50`        |This is a token generated by NETBANX that represents the card and is returned in the response to the card creation request. It can be used for subsequent payments in our payment APIs.|
|singleUseToken     |string<br/>`length<=36`        |This is the paymentToken returned in the response to a single-use token creation request. You can use this token to create a card to be stored in a customer profile.|
|status             |enumeration                    |This is the status of the card. Possible values are:<ul><li>ACTIVE</li></ul>

```apib
            {
              "nickName" : "John's corporate Visa",
              "holderName" : "MR. JOHN SMITH",
              "cardNum" : "4111111111111111",
              "cardExpiry" : {
                "month" : 12,
                "year" : 2019
              }
            }
```


<a name="dateofbirthobject"></a>
## dateOfBirth
|Element            |Type                           |Required       |Description    |
|---                |---                            |---            |---            |
|year               |number<br/>`length=4 min=1900` |Yes            |This is the year of the customer’s birth.|
|month              |number<br/>`length=2 max=12`   |Yes            |This is the month of the customer’s birth.|
|day                |number<br/>`length=2 max=31`   |Yes            |This is the day of the customer's birth.|

```apib
            { 
               "dateOfBirth": {
                  "year": 1980,
                  "month": 12,
                  "day": 25
                }
            }
```

<a name="eftbankaccountobject"></a>
## eftBankAccount
|Element            |Type                       |Description                        |
|---                |---                        |---       |
|id                 |string<br/>`length<=36`    |This is the ID for the request, returned by NETBANX. It can be used later, e.g., to look up or update the bank account.|
|nickName           |string<br/>`length<=50`    |This is an alias defined by the customer for the bank account (e.g., "CIBC Account").|
|merchantRefNum     |string<br/>`length<=255`   |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|status             |string                     |This is the status of the  request. Possible values are:<ul><li>ACTIVE &ndash; The bank account has been created.</li><li>INVALID &ndash; The bank account is invalid.</li><li>INACTIVE &ndash; The bank account has been deleted.</li></ul><br/>**Note:** By default, the bank account is created with the status of ACTIVE.|
|statusReason       |string<br/>`length<=255`   |If the status is INVALID, this is a description of why the account is invalid (e.g., account closed).|
|accountNumber      |string<br/>`length=4-12`   |This is the bank account number.|
|accountHolderName  |string<br/>`length<=30`    |This is the name of the customer or company that owns the bank account.|
|transitNumber      |string<br/>`length=5`      |This is the 5-digit transit number of the customer's bank branch.|
|institutionId      |string<br/>`length=3`      |This is the 3-digit institution ID of the customer’s bank branch.
|lastDigits         |string<br/>`length=2`      |This is the last two digits of the bank account number.|
|billingAddressId   |string<br/>`length<=36`    |This is the address ID returned in response to the request to Create an Address, which will be associated with this bank account.|
|paymentToken       |string<br/>`length<=50`    |This is a token generated by NETBANX that represents the bank account and is returned in the response to the bank account creation request. It can be used in the place of bank account information in Direct Debit transactions.|

```apib
            {
                "nickName" : "Sally's Bank of Montreal Account",
                "accountHolderName": "Sally",
                "accountNumber" : "511201",
                "transitNumber" : "25039",
                "institutionId" : "001",
                "billingAddressId": "60022f38-fd17-4731-909c-923930d0d5d4",
            }
```

<a name="headerobject"></a>
## header
|Element            |Type                       |Required       |Description    |
|---                |---                        |---            |---            |
|applicationData    |string                     |               |This is a hash of the [applicationData](https://developer.apple.com/library/prerelease/ios/documentation/PassKit/Reference/PKPaymentRequest_Ref/index.html#//apple_ref/occ/instp/PKPaymentRequest/applicationData) property of the original [PKPaymentRequest](https://developer.apple.com/library/prerelease/ios/documentation/PassKit/Reference/PKPaymentRequest_Ref/index.html#//apple_ref/occ/cl/PKPaymentRequest) object. If the value of that property is nil, this key is omitted.|
|transactionId      |string                     |Yes            |This is the transaction identifier, generated on the device.|
|ephemeralPublicKey |string                     |Yes            |This is the ephemeral public key bytes (X.509 encoded key bytes, Base64 encoded string).|
|publicKeyHash      |string                     |Yes            |This is a hash of the x.509 encoded public key bytes of the merchant's certificate as a Base64 encoded string.|

```apib
            {
              "header": {
                        "transactionId": "b53e22ef6669ce7f50951cfd6821908f4e679f050f5a551a1b5f6202253136ae",
                        "ephemeralPublicKey": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEB39YqvWZG0NOYjbkL5D61Mxip6uw23Q7m8gWgxL41k4fs0BgJ+MFcIGYOH86kAGL/wjiftDahRkUnzOGls2hzw==",
                        "publicKeyHash": "O5gJ/P5sQ7ufMZQXA7ccLoOkJ13VNknbu+4K0TaCQXE="
                }
            }
```

<a name="mandatesobject"></a>
## mandates
|Element            |Type                               |Description    |
|---                |---                                |---            |
|id                 |string<br/>`length<=36`            |This is the bank account ID returned by NETBANX that can be used later to look up or update a mandate.|
|reference          |string<br/>`For BACS length<=10`<br/>`For SEPA length<=35` |This is the identifier of the mandate in the banking system.|
|bankAccountId      |string<br/>`length<=36`            |This is the bank account that this mandate belongs to.|
|status             |enumeration                        |This is the mandate status. Possible values are:<ul><li>INITIAL – The mandate has been created but is not ready to be batched</li><li>PENDING – The mandate is ready to be batched</li><li>DECLINED – The mandate was not accepted for batching</li>BATCHED – The mandate has been batched (sent into the bacs system)</li><li>ACTIVE – The mandate has been batch for more than 5 business days and no returns have been received that would invalidate it</li><li>CANCELLED – The mandate has been cancelled</li><li>REJECTED – A return has been received that prevents the mandate from being used in a transaction</li><li>DISPUTED – A return has been received that disputes the mandates validity</li><li>INACTIVE – The mandate has been deleted</li></ul>|
|paymentToken       |string<br/>`length<=50`            |This is a token generated by NETBANX that represents the mandate and is returned in the response to the mandate creation request. It can be used for payments in our payment APIs.|
|statusChangeDate   |string                             |The date that the status was last changed|
|statusReasonCode   |string<br/>`length<=2`             |In the case of a REJECTED or DISPUTED status, the reason code received in a return|
|statusReason       |string<br/>`length<=255`           |In the case of an REJECTED or DISPUTED status, the text description for why the mandate was returned (e.g. bank account closed)|

```apib
            {
              "reference": "SUBSCRIP10"
            }
```

<a name="mobiledevicetokenobject"></a>
## profiles
|Element            |Type                               |Description    |
|---                |---                                |---            |


<a name="profilesobject"></a>
## profiles
|Element            |Type                               |Description    |
|---                |---                                |---            |
|id                 |string <br/>`length<=36`           |This is the ID returned in the response.|
|status             |enumeration                        |This is the status of the customer profile. Possible values are:<br/><ul><li>INITIAL</li><li>ACTIVE</li></ul><br/>By default the system automatically sets the profile status to an ACTIVE state. If you want to prevent the profile from being used for payments, you can set the status to an INITIAL state (e.g., in cases where you first want to validate the customer).|
|merchantCustomerId |string <br/>`length<=100`          |This is a customer ID that the merchant provides with the request for their own internal customer identification. This value must be unique for each customer belonging to a merchant.|
|locale             |enumeration                        |This indicates the language of the profile. Possible values are:<ul><li>en_US</li><li>fr_CA</li><li>en_GB</li></ul>
|firstName          |string <br/>`length<=80`           |This is the customer’s first name. |
|middleName         |string <br/>`length<=80`           |This is the customer’s middle name. |
|lastName           |string <br/>`length<=80`           |This is the customer’s last name. |
|dateOfBirth        |[dateOfBirth](#dateofbirthobject)  |This is the customer's date of birth.|
|ip                 |string<br/>`length<=46`            |This is the customer’s IP address.|
|gender             |enumeration                        |This is the customer’s gender. Possible values are:<ul><li>M (male)</li><li>F (female)</li></ul>
|nationality        |string<br/>`length<=30`            |This is the customer’s nationality.|
|email              |string<br/>`length<=255`           |This is the customer's email address.|
|phone              |string<br/>`length<=40`            |This is the customer's phone number.|
|cellPhone          |string<br/>`length<=40`            |This is the customer's cell phone number.|
|paymentToken       |string><br/>`length<=50`           |This is a token generated by NETBANX that represents the customer and returned in the response to the profile request.|
|addresses          |[addresses](#addressesobject)      |These are the addresses associated with this profile.|
|card               |[cards](#cardsobject)              |These are the cards associated with this profile.|
|achbankaccounts    |[achbankaccounts](#achbankaccounts)|These are the ACH bank accounts associated with this profile.|
|bacsbankaccounts   |[bacsbankaccounts](#bacsbankaccounts)|These are the BACS bank accounts associated with this profile.|
|eftbankaccounts    |[eftbankaccounts](#eftbankaccounts)|These are the EFT bank accounts associated with this profile.|
|sepabankaccounts   |[sepabankaccounts](#sepabankaccounts)|These are the SEPA bank accounts associated with this profile.|

```apib
            {
              "merchantCustomerId":"mycustomer1",
              "locale" : "en_US",
              "firstName" : "John",
              "lastName" : "Smith",
              "email" : "john.smith@somedomain.com",
              "phone" : "713-444-5555"
             }
```
<a name="sepaankaccountobject"></a>
## sepaBankAccount
Element            |Type                       |Description                        |
|---                |---                        |---       |
|id                 |string<br/>`length<=36`    |This is the ID for the request, returned by NETBANX. It can be used later, e.g., to look up or update the bank account.|
|nickName           |string<br/>`length<=50`    |This is an alias defined by the customer for the bank account (e.g., "ABN Account").|
|merchantRefNum     |string<br/>`length<=255`   |This is the merchant reference number created by the merchant and submitted as part of the request. It must be unique for each request.|
|status             |string                     |This is the status of the  request. Possible values are:<ul><li>ACTIVE &ndash; The bank account has been created.</li><li>INVALID &ndash; The bank account is invalid.</li><li>INACTIVE &ndash; The bank account has been deleted.</li></ul><br/>**Note:** By default, the bank account is created with the status of ACTIVE.|
|statusReason       |string<br/>`length<=255`   |If the status is INVALID, this is a description of why the account is invalid (e.g., account closed).|
|iban               |string<br/>`length<=255`   |This is the international bank account number.|
|bic                |string<br/>`length=8-11`   |This is the bank identification code.|
|accountHolderName  |string<br/>`length<=30`    |This is the name of the customer or company that owns the bank account.|
|lastDigits         |string<br/>`length=2`      |This is the last two digits of the bank account number.|
|billingAddressId   |string<br/>`length<=36`    |This is the address ID returned in response to the request to Create an Address, which will be associated with this bank account.|
|paymentToken       |string<br/>`length<=50`    |This is a token generated by NETBANX that represents the bank account and is returned in the response to the bank account creation request. It can be used in the place of bank account information in Direct Debit transactions.|
|mandates           |list                       |This is one or more mandates associated with the bank account.|

```apib
            {
                "nickName": "Sally's Account",
                "accountHolderName": "Sally Barnes",
                "iban": "NL77ABNA0492122466",
                "bic": "ABNANL2A",
                "billingAddressId": "60022f38-fd17-4731-909c-923930d0d5d4",
                "mandates": [
                {
                  "reference": "ABCDEFGHIJ10987"
                }
                ]
            }
```

a name="singleusetokenobject"></a>
## singleusetoken
|Element                |Type                       |Description    |
|---                    |---                        |---       |
|id                     |string<br/>`length<=36`    |This is an ID returned by NETBANX.|
|card                   |[card](#cardsobject)       |These are the details of the credit card.|
|profileId              |string<br/>`length<=36`    |This is the profile ID that is returned in the response to a profile creation request and that is associated with the card data provided.|
|paymentToken           |string<br/>`length<=50`    |This is the single-use payment token for the mobile device.|
|timeToLiveSeconds      |number                     |This is the period of time the single-use token is valid before expiration, in seconds.|

```apib
            {
                "card": {
                    "holderName": "MR. JOHN SMITH",
                    "cardNum": "4111111111111111",
                    "cardExpiry": {
                        "month": 12,
                        "year": 2019
                    },
                    "billingAddress": {
                        "street": "100 Queen Street West",
                        "street2": "Unit 201",
                        "city": "Toronto",
                        "country": "CA",
                        "state": "ON",
                        "zip": "M5H 2N2"
                    }
                }
            }
```


<a name="transactionobject"></a>
## transaction
|Element            |Type                           |Required       |Description    |
|---                |---                            |---            |---            |
|amount             |number<br>`max=99999999999`    |               |This is the amount of the request, in minor units.<br/>For example, to process US $10.99, this value should be 1099. To process 1000 Japanese yen, this value should be 1000. To process 10.139 Tunisian dinar, this value should be 10139.<br/>**Note:** For a currency that has 3 decimal units, our system will half round up the least significant digit. Therefore, a transaction of 10.139 Tunisian dinar would be processed as 10.14.|
|currencyCode       |string<br/>`length<=3`         |               |This is the currency of the merchant account, e.g., USD or CAD, returned in the request response.<br/>See [Currency Codes](#currencycodes)|

```apib
            {
              "amount": 2500,
              "currencyCode":"CAD"
            }
```

# Error Summary

## Common Errors
|HTTP Status Code       |Error Code    |Description|
|---                    |---           |---|
|500                    |1000           |An internal error occurred.         |
|502                    |1001           |An error occurred with the external processing gateway.|
|500                    |1002           |An internal error occurred.            |
|500                    |1003           |An internal error occurred.            |
|500                    |1007           |An internal error occurred.            |
|500                    |1008           |An internal error occurred.            |
|429                    |1200           |The API call has been denied as it has exceeded the permissible call rate limit.|
|401                    |5000           |Your merchant account authentication failed. Either your store ID/password are invalid or the IP address from which you are sending the transaction has not been authorized.|
|400                    |5001           |The submitted currency code is invalid or your account does not support this currency.|
|400                    |5003           |You submitted an invalid amount with your request.|
|400                    |5004           |You submitted an invalid account type with your request.|
|400                    |5005           |You submitted an invalid operation type with your request.|
|400                    |5010           |The submitted country code is invalid.|
|400                    |5016           |The merchant account you provided cannot be found.|
|400                    |5017           |The merchant account you provided is disabled.|
|402                    |5021           |Your transaction request has been declined.|
|400                    |5023           |The request is not parseable.|
|409                    |5031           |The transaction you have submitted has already been processed.|
|401                    |5040           |Your merchant account is not configured for the transaction you attempted.|
|400                    |5042           |The merchant reference number is missing or invalid or it exceeds the maximum permissible length.|
|400                    |5068           |Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.|
|404                    |5269           |The ID(s) specified in the URL do not correspond to the values in the system.|
|403                    |5270           |The credentials provided with the request do not have permission to access the requested data.|
|406                    |5271           |You requested a response in the 'Accept' header that is in an unsupported format.|
|406                    |5272           |The 'Content-Type' you specified in request header was submitted in an unsupported format.|
|404                    |5273           |Your client reached our application but we were unable to service your request due to an invalid URL.|
|401                    |5275           |The authentication credentials provided with the request have expired.|
|401                    |5276           |The authentication credentials provided with the request provided have been disabled.|
|401                    |5277           |The authentication credentials provided with the request have been locked due to multiple authentication failures.|
|401                    |5278           |The authentication credentials provided with the request were not accepted for an unknown reason.|
|401                    |5279           |The authentication credentials are invalid.|
|401                    |5280           |The required authentication credentials were not provided.|
|405                    |5281           |The request uses an action (e.g., GET, POST, or PUT) that is not supported by the resource.|
|400                    |5502           |Either the payment token is invalid or the corresponding profile or bank account is not active.|

## Customer Vault Errors
|HTTP Status Code       |Error Code     |Description|
|---                    |---            |---|
|409                    |7503           |The card number you are trying to add to this profile is already used by this profile.|
|409                    |7504           |This card has been used for the maximum number of profiles allowed. Please use a different card.|
|409                    |7505           |The *merchantCustomerId* provided for this profile has already been used for another profile.|
|400                    |7508           |You submitted an invalid card number or brand or combination of card number and brand with your request.|
|409                    |7509           |The bank account has one or more existing mandates so associated banking information cannot be updated.|
|400                    |7510           |You submitted invalid bank account information for your banking scheme.|
|404                    |7511           |The address ID provided in your request could not be found.|
|400                    |7512           |The merchant's Apple Pay configuration could not be found.|
|400                    |7513           |The Apple Pay token is invalid.|


# Profiles [/profiles]
<a name="profilesrequest"></a>

## Create a Profile [POST /profiles]

This is how you submit a profile creation request.

The following lists describe the mandatory and optional parameters for processing a Profile Creation request. For a detailed description of the attributes, please refer to the [profiles object](#profilesobject).

**Required Parameters**
* merchantCustomerId
* locale

**Optional Parameters**
* firstName
* middleName
* lastName
* dateOfBirth
* ip
* gender
* nationality
* email
* phone
* cellPhone


+ Request Profile Creation (application/json)

    + Attributes
    
        + merchantCustomerId (string, required) - This is a customer ID that the merchant provides with the request for their own internal customer identification. It must be unique for each customer belonging to a merchant.
        + locale (string, required) - This indicates the language of the profile. 
        + firstName (string, optional) - This is the customer’s first name.
        + middleName (string, optional) - This is the customer’s middle name.
        + lastName (string, optional) - This is the customer's last name.
        + dateOfBirth (object, optional) - This is the customer's date of birth.
        + ip (string, optional) - This is the customer’s IP address.
        + gender (string, optional) - This is the customer’s gender. 
        + nationality - This is the customer’s nationality. 
        + email - This is the customer’s email address. 
        + phone - This is the customer’s phone number. 
        + cellPhone - This is the customer’s cell phone number.
        
    + Headers
    
            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY
            
    + Body
    
        ```apib
            {
              "merchantCustomerId":"mycustomer1",
              "locale" : "en_US",
              "firstName" : "John",
              "lastName" : "Smith",
              "email" : "john.smith@somedomain.com",
              "phone" : "713-444-5555"
             }            
        ```        

+ Response 200 (application/json)

    + Attributes
    
        + id (string, required) - This is the ID returned in the response. This ID can be used for future associated requests.
        + status (string, required) - This is the status of the transaction request.
        + merchantCustomerId (string, required) - This is a customer ID that the merchant provides with the request for their own internal customer identification. It must be unique for each customer belonging to a merchant.
        + locale (string, required) - This indicates the language of the profile. 
        + firstName (string, optional) - This is the customer’s first name.
        + middleName (string, optional) - This is the customer’s middle name.
        + lastName (string, optional) - This is the customer's last name.
        + dateOfBirth (object, optional) - This is the customer's date of birth.
        + ip (string, optional) - This is the customer’s IP address.
        + gender (string, optional) - This is the customer’s gender. 
        + nationality (string, optional) - This is the customer’s nationality. 
        + email (string, optional) - This is the customer’s email address. 
        + phone (string, optional) - This is the customer’s phone number. 
        + cellPhone (string, optional) - This is the customer’s cell phone number.
        + paymentToken (string, required) - This is a token that represents the customer and is returned in the response to the profile request.
    
    
    + Body

        ```apib
            {
              "id" : "a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1",
              "status" : "ACTIVE",
              "merchantCustomerId" : "mycustomer1",
              "locale" : "en_US",
              "firstName" : "John",
              "lastName" : "Smith",
              "email" : "john.smith@somedomain.com",
              "phone" : "713-444-5555",  
              "paymentToken" : "P0zPDqggWESaktW"
            }        
        ```


+ Request Profile Creation Using a Card (application/json)

    + Attributes
    
        + merchantCustomerId (string, required) - This is a customer ID that the merchant provides with the request for their own internal customer identification. It must be unique for each customer belonging to a merchant.
        + locale (string, required) - This indicates the language of the profile.
        + card.cardNum (string, required) - This is the card number.
        + card.cardExpiry (object, required) - This is the card expiry date.
        + firstName (string, optional) - This is the customer’s first name.
        + middleName (string, optional) - This is the customer’s middle name.
        + lastName (string, optional) - This is the customer's last name.
        + dateOfBirth (object, optional) - This is the customer's date of birth.
        + ip (string, optional) - This is the customer’s IP address.
        + gender (string, optional) - This is the customer’s gender. 
        + nationality - This is the customer’s nationality. 
        + email - This is the customer’s email address. 
        + phone - This is the customer’s phone number. 
        + cellPhone - This is the customer’s cell phone number
        + card.nickName (string, optional) - This is an alias defined by the customer for this card.
        + card.holderName (string, optional) - This is the name of the card holder.
        + card.billingAddress (object, optional) - This is the billing address of the card holder.
        
    + Headers
    
            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY
            
    + Body
    
        ```apib
            {
                "merchantCustomerId": "mycustomer1",
                "locale": "en_US",
                "firstName": "John",
                "lastName": "Smith",
                "email": "john.smith@somedomain.com",
                "phone": "713-444-5555",
                "card": {
                    "nickName": "John's corporate Visa",
                    "holderName": "MR. JOHN SMITH",
                    "cardNum": "4111111111111111",
                    "cardExpiry": {
                        "month": 12,
                        "year": 2019
                    },
                    "billingAddress": {
                        "street": "66 Main St.",
                        "city": "Ottawa",
                        "state": "ON",
                        "country": "CA",
                        "zip": "K2K2K2"
                    }
                }
            }
        ```        

+ Response 200 (application/json)

    + Attributes
    
        + id (string, required) - This is the ID returned in the response. This ID can be used for future associated requests.
        + status (string, required) - This is the status of the transaction request.
        + merchantCustomerId (string, required) - This is a customer ID that the merchant provides with the request for their own internal customer identification. It must be unique for each customer belonging to a merchant.
        + locale (string, required) - This indicates the language of the profile.
        + firstName (string, optional) - This is the customer’s first name.
        + middleName (string, optional) - This is the customer’s middle name.
        + lastName (string, optional) - This is the customer's last name.
        + dateOfBirth (object, optional) - This is the customer's date of birth.
        + ip (string, optional) - This is the customer’s IP address.
        + gender (string, optional) - This is the customer’s gender. 
        + nationality (string, optional) - This is the customer’s nationality. 
        + email (string, optional) - This is the customer’s email address. 
        + phone (string, optional) - This is the customer’s phone number. 
        + cellPhone (string, optional) - This is the customer’s cell phone number
        + cards (array, required) - These are details about the card used to create the profile.
        + addresses (array, required) - These are details about the address associated with the card.
        + paymentToken (string, required) - This is a token that represents the customer and is returned in the response to the profile request.
    
    
    + Body

        ```apib
            {
                "id": "a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1",
                "status": "ACTIVE",
                "merchantCustomerId": "mycustomer1",
                "locale": "en_US",
                "firstName": "John",
                "lastName": "Smith",
                "email": "john.smith@somedomain.com",
                "phone": "713-444-5555",
                "paymentToken": "P0zPDqggWESaktW",
                "addresses": [
                    {
                        "id": "794b2b05-1a3b-4544-a59c-8612d0a4711e",
                        "status": "ACTIVE",
                        "street": "66 Main St.",
                        "city": "Ottawa",
                        "state": "ON",
                        "country": "CA",
                        "zip": "K2K2K2"
                    }
                ],
                "cards": [
                    {
                        "id": "0d991673-2874-421f-ba61-019e0f47d41f",
                        "status": "ACTIVE",
                        "nickName": "John's corporate Visa",
                        "holderName": "MR. JOHN SMITH",
                        "cardBin": "411111",
                        "lastDigits": "1111",
                        "cardExpiry": {
                            "month": 12,
                            "year": 2019
                        },
                        "cardType": "VI",
                        "paymentToken": "CRsinILfZADEmR4",
                        "billingAddressId": "794b2b05-1a3b-4544-a59c-8612d0a4711e",
                        "defaultCardIndicator": true
                    }
                ]
            }        
        ```
    
# Addresses [/addresses]
<a name="addressesrequest"></a>

## Create an Address [POST /profiles/{PROFILE_ID/addresses]

This is how you submit an address creation request.

+ Parameters
    + PROFILE_ID:a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1 (string,required) - This is the ID of the profile to which you are adding an address.

+ Attributes
    + nickName (string)

+ Response 200 (application/json)

    + Attributes        
    
# Cards [/cards]
<a name="cardsrequest"></a>

## Create a Card [POST /profiles/{PROFILE_ID/cards]

This is how you submit a card creation request.

+ Parameters
    + PROFILE_ID:a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1 (string,required) - This is the ID of the profile to which you are adding a card.

+ Attributes
    + nickName (string)

+ Response 200 (application/json)

    + Attributes
    
# ACH Bank Accounts [/achbankaccounts]
<a name="achbankaccountsrequest"></a>

## Create an ACH Bank Account [POST /profiles/{PROFILE_ID/achbankaccounts]

This is how you submit an ACH bank account creation request.

+ Parameters
    + PROFILE_ID:a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1 (string,required) - This is the ID of the profile to which you are adding an ACH bank account. 

+ Attributes
    + nickName (string)

+ Response 200 (application/json)

    + Attributes            
    
# BACS Bank Accounts [/bacsbankaccounts]
<a name="bacsbankaccountsrequest"></a>

## Create an ACH Bank Account [POST /profiles/{PROFILE_ID/bacsbankaccounts]

This is how you submit a BACS bank account creation request.

+ Parameters
    + PROFILE_ID:a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1 (string,required) - This is the ID of the profile to which you are adding a BACS bank account. 

+ Attributes
    + nickName (string)

+ Response 200 (application/json)

    + Attributes
    
# EFT Bank Accounts [/eftbankaccounts]
<a name="eftbankaccountsrequest"></a>

## Create an EFT Bank Account [POST /profiles/{PROFILE_ID/eftbankaccounts]

This is how you submit an EFT bank account creation request.

+ Parameters
    + PROFILE_ID:a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1 (string,required) - This is the ID of the profile to which you are adding an EFT bank account. 

+ Attributes
    + nickName (string)

+ Response 200 (application/json)

    + Attributes
    
# SEPA Bank Accounts [/sepabankaccounts]
<a name="sepabankaccountsrequest"></a>

## Create a SEPA Bank Account [POST /profiles/{PROFILE_ID/sepabankaccounts]

This is how you submit a SEPA bank account creation request.

+ Parameters
    + PROFILE_ID:a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1 (string,required) - This is the ID of the profile to which you are adding a SEPA bank account. 

+ Attributes
    + nickName (string)

+ Response 200 (application/json)

    + Attributes
    
# Mandates [/mandates]
<a name="mandatesrequest"></a>

## Create a BACS Mandate [POST /profiles/{PROFILE_ID/bacsbankaccounts/{BANK_ACCOUNT_ID}/mandates]

This is how you submit a BACS mandate creation request.

+ Parameters
    + PROFILE_ID:a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1 (string,required) - This is the ID of the profile to which the BACS bank account belongs.
    + BANK_ACCOUNT_ID:6a275b7c-6f11-4ed1-ae77-21071724574a (string, required) - This is the ID of the BACS bank account to which you are adding the mandate.

+ Attributes
    + reference (string)

+ Response 200 (application/json)

    + Attributes
    
## Create a SEPA Mandate [POST /profiles/{PROFILE_ID/sepabankaccounts/{BANK_ACCOUNT_ID}/mandates]

This is how you submit a SEPA mandate creation request.

+ Parameters
    + PROFILE_ID:a5f1889d-f1be-4bbf-941d-fd9b8d09d5b1 (string,required) - This is the ID of the profile to which the SEPA bank account belongs.
    + BANK_ACCOUNT_ID:6a275b7c-6f11-4ed1-ae77-21071724574a (string, required) - This is the ID of the SEPA bank account to which you are adding the mandate.

+ Attributes
    + reference (string)

+ Response 200 (application/json)

+ Attributes

# Apple Pay Single-Use Tokens [/applepaysingleusetokens]
<a name="applepaysingleusetokensrequest"></a>

## Create an Apple Pay Single-Use Token [POST /applepaysingleusetokens]

+ Attributes
    
+ Response 200 (application/json)

# Mobile Device Single-Use Tokens [/singleusetokens]
<a name="singleusetokensrequest"></a>

## Create a Mobile Device Single-Use Token [POST /singleusetokens]

+ Attributes
    
+ Response 200 (application/json)